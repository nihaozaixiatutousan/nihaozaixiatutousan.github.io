<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[EsLint_01]]></title>
    <url>%2F2019%2F09%2F07%2FEsLint-01%2F</url>
    <content type="text"><![CDATA[EsLint安装1npm install eslint --save-dev设置一个配置文件1./node_modules/.bin/eslint --int注： windows Os用户请在git-bash下运行运行1./node_module/.bin/eslint yourfile.js你也可以在全局安装 eslint 1npm install -G eslint lianjie:Airbnb JavaScript 代码规范]]></content>
      <categories>
        <category>eslint</category>
      </categories>
      <tags>
        <tag>eslint</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-01]]></title>
    <url>%2F2019%2F09%2F06%2F%E7%AE%97%E6%B3%95-01%2F</url>
    <content type="text"><![CDATA[算法数组线性数组注：在计算机中算法是为了简化计算机软件取得结果所需要的步骤所需步数取o值O(logN) log以2为底二分查找function linearSearch(data,flag){ if(typeof data !== &quot;Array&quot;){ break } for(let i =0;i&lt;data.length;i++){ if(data[i] == flag){ return i+1 } } } 12345678910111213141516171819function binarySearch(data,flag)&#123; let low = 0; let high = data.length-1; let middle; while(low&lt;=high)&#123; middle = Math.floor((high+low)/2); if(data[middle]==flag)&#123; return middle &#125; if(flag&gt;data[middle])&#123; low = middle + 1; &#125;else&#123; high = middle -1 &#125; &#125; return false;&#125; 递归调用 function binarySearch(data,flag,start,end){ var end = end === undefined?data.length-1:end, start = start || 0; let middle = Math.floor((end+start)/2); if(data[middle] == flag){ return middle; } if(end&lt;=start){ return false; } if(data[middle]&lt;flag){ return binarySearch(data,flag,middle+1,end); } if(data[middle]&gt;flag){ return binarySearch(data,flag,start,middle-1) } return false; }冒泡排序缺点： function hasDuplicate(array){ let existingNumbers = []; for(let i=0;i&lt;array.length;i++){ //数组空值为undefined if(existingNumbers[array[i]]===undefined){ existingNumbers[array[i]]=1; }else{ return true } } return false }选择排序function selectionSort(array){ let lowestNumberIndex, temp; for(let i=0;i&lt;array.length;i++){ lowestNumberIndex = i; for(let j=i+1;j&lt;array.length;j++)){ if(array[j]&lt;array[lowerstNumberIndex]){ lowestNumberIndex = j; } if(i !== lowestNumberInde){ temp = array[i]; array[i] = array[lowestNumberIndex]; array[lowestNumberIndex]=temp; } } } return array } 注：js实现，经过测试，如有问题–qq:283421724.]]></content>
      <tags>
        <tag>js</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SSH自动登录备份]]></title>
    <url>%2F2019%2F09%2F03%2FSSH%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E5%A4%87%E4%BB%BD%2F</url>
    <content type="text"><![CDATA[SSH利用ssh可以实现远程登录主机并执行命令的功能连接到远程客户端or服务器1ssh user@remote_ip注：uesr代表登录用户；remote_ip代表远程主机IP地主远程无密码登录创建ssh公钥和私钥1ssh-keygen -t rsa -C &quot;youemail@xx.xx&quot; 注：生成的密钥会在当前所使用账户家目录下的.ssh文件夹中 -t 为生成密钥（yue)类型 -C 添加注释 使用ssh-copy-id复制公钥到远程主机 1ssh-copy-id -i ./ssh/id_rsa.pub user@remote_ip check in: ./ssh/authorized_keys 注：上述，是将本机的ssh公钥内容拷贝到目标主机的.ssh/authorized_keys文件中 ssh指定端口号登陆 1ssh -p port user@remote_ip netcat使用netcat是一款网络工具可以用来扫描本机端口号以及网络传输文件 与mcrypt结合使用，可以一边加密一边传输文件]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《我的野蛮女友》--n刷]]></title>
    <url>%2F2019%2F08%2F26%2F%E3%80%8A%E6%88%91%E7%9A%84%E9%87%8E%E8%9B%AE%E5%A5%B3%E5%8F%8B%E3%80%8B-n%E5%88%B7%2F</url>
    <content type="text"><![CDATA[第一次看这部影片感官：真的很爽：而且也很搞笑。第二次认真看的时候有些情节，可能是由于本人年龄大了，脑洞有所增长的缘由，我对这部影片有了自己的一些感悟！ 未完待续……（等下次刷的时候想起来再说吧，未知像一颗成熟的精致的草莓，永远那么的诱人）]]></content>
      <categories>
        <category>film</category>
      </categories>
      <tags>
        <tag>film</tag>
        <tag>favorite</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo+next themes]]></title>
    <url>%2F2019%2F08%2F25%2Fhexo-next-themes%2F</url>
    <content type="text"><![CDATA[next主题hexo下的主题驳杂繁多，要想找到一个心仪的主题很不容易next主题呢，主题对用户比较友好，集成性高，几乎你能想到的功能的大部分都能满足。首先安装主题安装12cd hexo(特指你的blog文件夹）git clone https://github.com/theme-next/hexo-theme-next themes/next (注:这样clone下来的是最新版的如果需要其他版本请到github下theme-next下查看详情） hexo/_config.yml 1theme: next next/_config.yml 此文件为next主题配置文件，可以查询官方查看主要配置详情theme-next]]></content>
      <categories>
        <category>next</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo]]></title>
    <url>%2F2019%2F08%2F24%2Fhexo%2F</url>
    <content type="text"><![CDATA[hexo首先谈论下心得，对于我来说hexo绝对是个人搭建博客的首选。使用人数众多，方便搜索未知的黑洞。官网比较友好。搭建 hexo 需要的工具安装环境 node.js + npm检查是否安装node 与 npmnpm 可以更换国内的镜像源，这样对于我们国内的用户下载的时候会友好点1npm config set registry https://registry.npm.taobao.org/ 安装hexo-cli 1npm install -g hexo-cli hexo 的关键命令创建hexo个人blog命令 1hexo init blog(里的blog特指为你所创建的博客命名) 安装包依赖 12cd blognpm install 创建博客静态文件 1hexo generate || hexo g(||后面为简写命令) 本地查看博客 1hexo server 清理静态文件 1hexo clean 更多命令请查看官网hexo]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux common command]]></title>
    <url>%2F2019%2F08%2F24%2FLinux-common-command%2F</url>
    <content type="text"><![CDATA[Linuxcd rm cp mvmkdir 常用命令ls 显示当前文件夹文件列表ls -l 以列表的方式显示当前文件夹列表ls -a 可以显示当前文件夹内的隐藏文件ls *.c 使用通配符查看当前文件夹内以.c后缀结尾的文件ls ?.c 使用？号匹配单个字符touch file.c 创建file.c文件 \ 反斜杠为转意字符 &gt; 输出重定向符号 ls &gt; test.txt 如果目录不存在test.txt会新建文件 | 管道命令 ls -la | grep *.c grep 文本搜索命令 find 查找文件 pwd 显示当前所在文件夹绝对路径 clear 清除屏幕 cd 切换工作目录 cd ..回到上一级目录 cd - 回到上一次进入的目录 mkdir 创建一个新的文件夹 mkdir -p 可以递归创建文件夹 rmdir 删除文件夹 rm 删除文件 rm -rf 删除文件及文件夹且不提示 ln originfile targetfile 给文件创建快捷方式 ln -s 给文件创建软链接 history 查看自己执行过的命令 find ./ -name Desktop 查找当前文件 cp 拷贝文件 cp -r 拷贝文件夹 cp -v 显示拷贝进度 mv 移动命令 &amp;&amp; 可以重命名 file 可以查看文件类型 tar -zcvf 打包文件夹并压缩文件 tar -zxvf 解压缩 zip -r zip后缀压缩 unzip -d ./ 指定目录解压 which 查看命令所在位置 cat 查看文件内容 用户权限不推荐直接使用root用户 whoami 查看当前用户 who 查看登录用户 exit 退出当前用户 su 切换用户 cat /etc/group 查看用户组信息 cat /etc/passwd 查看用户组id useradd 新建用户 usermod 修改用户所在组 passwd 输入用户密码 userdel 删除用户 chmod /u/g/o/a +/-/= filename 修改文件权限 chown 修改文件所有者 last 查看用户登录时间 chgrp 修改文件所属组 系统管理ps -aux 查看进程 kill 杀死进程 top 显示动态进程 reboot 关闭计算机 showdown -r 重新启动计算机 du 查看目录所占磁盘空间 df 检查磁盘空间 rpm 包安装 ifconfig 查看网络配置信息 ping 测试网络连通性 vim常用命令进入输入命令i 当前光标所在位置插入 o 光标说在行往下一行插入 O 上一行插入 a 光标下一个字符插入 A 光标所在行尾插入 常用命令模式ESC 进入快捷键模式 : 进入命令行模式 :w 保存文件:q 退出文件:wq 退出并保存:q! 强行退出不保存 快捷键模式h 光标向左移动j 光标向下移动k 光标向上移动l 光标向右移动 dd 删除当前光标所在行yy 复制当前行v 进入视图模式p 粘贴 远程登录ssh -l root@ip scp -r 本地目录复制到远程]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git]]></title>
    <url>%2F2019%2F08%2F24%2FGit%2F</url>
    <content type="text"><![CDATA[git basic commandgit add git commit git status 简化指令git config –global alias.st status]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F23%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
